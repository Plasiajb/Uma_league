name: pg-backup

on:
  # 手动触发
  workflow_dispatch: {}
  # 每天 03:00 UTC 备份（自行改 cron；UTC=中国-8h=瑞典+1h 冬令时）
  schedule:
    - cron: "0 3 * * *"

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get -y install postgresql-client

      - name: Dump database
        env:
          PG_URL: ${{ secrets.PG_URL }}
        run: |
          set -e
          TS=$(date -u +'%Y%m%d-%H%M%SZ')
          echo "TS=$TS" >> $GITHUB_ENV
          FILE="backup-$TS.dump"
          # 自定义格式(-Fc)，后续 pg_restore 更灵活
          pg_dump --format=custom --no-owner --no-privileges --dbname="$PG_URL" -f "$FILE"
          echo "FILE=$FILE" >> $GITHUB_ENV

      - name: Encrypt backup (AES-256)
        if: ${{ secrets.BACKUP_PASSPHRASE != '' }}
        env:
          PASSPHRASE: ${{ secrets.BACKUP_PASSPHRASE }}
        run: |
          openssl enc -aes-256-cbc -pbkdf2 -salt -in "$FILE" -out "$FILE.enc" -pass env:PASSPHRASE
          rm "$FILE"
          echo "FILE=$FILE.enc" >> $GITHUB_ENV

      - name: Create GitHub Release with backup
        uses: softprops/action-gh-release@v2
        with:
          tag_name: db-backup-${{ env.TS }}
          name: DB backup ${{ env.TS }}
          files: ${{ env.FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 可选：再作为 artifact 备一份（90 天过期）
      - name: Upload artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: db-backup-${{ env.TS }}
          path: ${{ env.FILE }}
          retention-days: 90
